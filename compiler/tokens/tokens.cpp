
#include "tokensClass.cpp"
#include <vector>
using namespace std;

tuple MainTokenTu = (("//", Tokens::Extra::commentTok()),
                     ("\"", Tokens::Extra::SingleLiQuo()),
                     ("'''", Tokens::Extra::DoubleLiQuo()),
                     ("\"", Tokens::Extra::SingleLiQuo()),
                     ("&", Tokens::Operators::Logical_Oprs::and_opr()),
                     ("and", Tokens::Operators::Logical_Oprs::and_opr()),
                     ("==", Tokens::Operators::Logical_Oprs::eq_opr()),
                     ("<", Tokens::Operators::Logical_Oprs::belowThan()),
                     (">", Tokens::Operators::Logical_Oprs::greaterThan()),
                     ("<=", Tokens::Operators::Logical_Oprs::belowThanOrEq()),
                     (">=", Tokens::Operators::Logical_Oprs::greaterThanOrEq()),
                     ("!=", Tokens::Operators::Logical_Oprs::notEq()),
                     ("!", Tokens::Operators::Logical_Oprs::Not()),
                     ("or", Tokens::Operators::Logical_Oprs::Or()),
                     ("+", Tokens::Operators::Arithmetic::addition()),
                     ("-", Tokens::Operators::Arithmetic::substract()),
                     ("/", Tokens::Operators::Arithmetic::divide()),
                     ("*", Tokens::Operators::Arithmetic::multiply()),
                     ("%", Tokens::Operators::Arithmetic::modulo()),
                     ("=", Tokens::Operators::Assignment::assign()),
                     ("(", Tokens::Operators::Punctuators::semi_circular_brac::StartSemiCircleBrac()),
                     (")", Tokens::Operators::Punctuators::semi_circular_brac::EndSemiCircleBrac()),
                     ("{", Tokens::Operators::Punctuators::curvy_brac::StartCurvyBrac()),
                     ("}", Tokens::Operators::Punctuators::curvy_brac::EndCurvyBrac()),
                     ("[", Tokens::Operators::Punctuators::sqr_brac::StartSqrBrac()),
                     ("]", Tokens::Operators::Punctuators::sqr_brac::EndSqrBrac()),
                     ("true", Tokens::datatypes::Bool::True()),
                     ("True", Tokens::datatypes::Bool::True()),
                     ("false", Tokens::datatypes::Bool::False()),
                     ("False", Tokens::datatypes::Bool::False()),
                     ("Null", Tokens::Keywords::nulls::Null()),
                     ("Void", Tokens::Keywords::nulls::Void()),
                     ("None", Tokens::Keywords::nulls::None()),
                     ("Nah", Tokens::Keywords::nulls::Nah()),
                     ("null", Tokens::Keywords::nulls::Null()),
                     ("void", Tokens::Keywords::nulls::Void()),
                     ("none", Tokens::Keywords::nulls::None()),
                     ("nah", Tokens::Keywords::nulls::Nah()),
                     ("fun", Tokens::Keywords::fun()),
                     ("class", Tokens::Keywords::Class()),
                     ("while", Tokens::Keywords::While()),
                     ("for", Tokens::Keywords::For()),
                     ("if", Tokens::Keywords::controlflow::If()),
                     ("elif", Tokens::Keywords::controlflow::Elif()),
                     ("else", Tokens::Keywords::controlflow::Else()),
                     ("continue", Tokens::Keywords::ProcessKeywords::Continue()),
                     ("break", Tokens::Keywords::ProcessKeywords::Break()),
                     ("return", Tokens::Keywords::ProcessKeywords::Return()));